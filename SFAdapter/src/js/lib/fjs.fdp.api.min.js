'use strict';namespace("fjs.api");fjs.api.DataProviderBase=function(a,c,d){fjs.EventsSource.call(this);this.ticket=a;this.node=c;this.config=d;this.listeners={}};fjs.api.DataProviderBase.extend(fjs.EventsSource);fjs.api.DataProviderBase.check=function(){return!1};fjs.api.DataProviderBase.prototype.sendMessage=function(){};fjs.api.DataProviderBase.prototype.addSyncForFeed=function(a){this.sendMessage({action:"registerSync",data:{feedName:a}})};
fjs.api.DataProviderBase.prototype.removeSyncForFeed=function(a){this.sendMessage({action:"unregisterSync",data:{feedName:a}})};fjs.api.DataProviderBase.prototype.logout=function(){this.sendMessage({action:"logout",data:null})};fjs.api.DataProviderBase.prototype.sendAction=function(a,c,d){this.sendMessage({action:"fdp_action",data:{actionName:c,params:d}})};namespace("fjs.api");
fjs.api.SimpleClientDataProvider=function(a,c,d){var b=this;fjs.api.DataProviderBase.call(this,a,c);a=document.createElement("script");this.dataManager=null;this.onSync=function(a){b.fireEvent("sync",a)};a.onload=function(){b.dataManager=new fjs.fdp.DataManager(b.ticket,b.node,fjs.fdp.CONFIG,function(){});b.dataManager.addEventListener("",function(a){b.fireEvent(a.eventType,a)});d()};document.head.appendChild(a);a.src="js/lib/fjs.fdp.min.js"};fjs.api.SimpleClientDataProvider.extend(fjs.api.DataProviderBase);
fjs.api.SimpleClientDataProvider.check=function(){return!0};
fjs.api.SimpleClientDataProvider.prototype.sendMessage=function(a){switch(a.action){case "registerSync":this.dataManager.addFeedListener(a.data.feedName,this.onSync);break;case "unregisterSync":this.dataManager.removeFeedListener(a.data.feedName,this.onSync);break;case "logout":this.dataManager.logout();break;case "fdp_action":this.dataManager.sendAction(a.data.feedName,a.data.actionName,a.data.params);break;case "SFLogin":this.dataManager.SFLogin(a.data);break;default:console.error("Unknown action: "+
a.action)}};namespace("fjs.api");
fjs.api.WebWorkerDataProvider=function(a,c,d){var b=this;fjs.api.DataProviderBase.call(this,a,c);this.worker=new Worker("js/lib/fdp_worker.js");this.worker.addEventListener("message",function(a){b.fireEvent(a.data.eventType,a.data.data||a.data)},!1);this.worker.addEventListener("error",function(a){console.error("Worker Error",a)});this.sendMessage=function(a){b.worker.postMessage(a)};this.sendMessage({action:"init",data:{ticket:this.ticket,node:this.node}});setTimeout(function(){d()},0)};fjs.api.WebWorkerDataProvider.extend(fjs.api.DataProviderBase);
fjs.api.WebWorkerDataProvider.check=function(){return!!window.Worker};fjs.api.WebWorkerDataProvider.prototype.sendMessage=function(a){this.worker.postMessage(a)};namespace("fjs.api");
fjs.api.SharedWorkerDataProvider=function(a,c,d){var b=this;fjs.api.DataProviderBase.call(this,a,c);this.worker=new SharedWorker("js/lib/fdp_shared_worker.js");this.worker.port.addEventListener("message",function(a){"ready"==a.data.eventType&&(b.sendMessage({action:"init",data:{ticket:b.ticket,node:b.node,config:fjs.fdp.CONFIG}}),d());b.fireEvent(a.data.eventType,a.data)},!1);this.worker.port.addEventListener("error",function(a){console.error("Worker Error",a)});this.worker.port.start();this.sendMessage=
function(a){this.worker.port.postMessage(a)}};fjs.api.SharedWorkerDataProvider.extend(fjs.api.DataProviderBase);fjs.api.SharedWorkerDataProvider.check=function(){return!!window.SharedWorker};namespace("fjs.api");fjs.api.FDPProviderFactory=function(){this._providers={sharedWorker:fjs.api.SharedWorkerDataProvider,webWorker:fjs.api.WebWorkerDataProvider,simple:fjs.api.SimpleClientDataProvider}};
fjs.api.FDPProviderFactory.prototype.getProvider=function(a,c,d){for(var b=0;b<fjs.fdp.CONFIG.providers.length;b++){var e=this._providers[fjs.fdp.CONFIG.providers[b]];if(e.check())return new e(a,c,d)}};
